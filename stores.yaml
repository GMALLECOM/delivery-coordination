openapi: 3.0.0
info:
  version: 1.0.0
  title: Outlets API
servers:
  - url: https://api.example.com/
paths:
  /api/prov/v1/outlets:
    get:
      summary: Get a list of all outlets
      description: Returns a list of all outlets
      operationId: getOutlets
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of outlets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Outlet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  /api/prov/v1/outlets/{outlet_id}:
    get:
      summary: Get a specific outlet by ID
      description: Returns a specific outlet based on its ID
      operationId: getOutletById
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: outlet_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested outlet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outlet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Outlet not found
  /api/prov/v1/outlets:
    post:
      summary: Create a new outlet
      description: Creates a new outlet
      operationId: createOutlet
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outlet'
      responses:
        '201':
          description: Outlet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outlet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v1/outlets/{outlet_id}:
    put:
      summary: Update an existing outlet
      description: Updates an existing outlet based on its ID
      operationId: updateOutlet
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: outlet_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outlet'
      responses:
        '200':
          description: Outlet updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outlet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Outlet not found
  /api/prov/v1/outlets/{outlet_id}:
    put:
      summary: Update an existing outlet
      description: Updates an existing outlet based on its ID
      operationId: updateOutlet
      deprecated: true
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: outlet_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outlet'
      responses:
        '200':
          description: Outlet updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outlet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Outlet not found
  paths:
  /api/prov/v1/outlets/{outlet_id}:
    delete:
      summary: Delete an existing outlet
      description: Deletes an existing outlet based on its ID
      operationId: deleteOutlet
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: outlet_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Outlet deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Outlet not found
  /api/prov/v1/brands:
    get:
      summary: Get all brands
      description: Returns all brands
      operationId: getBrands
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v1/brands/{brand_id}:
    get:
      summary: Get a brand by ID
      description: Returns a brand based on its ID
      operationId: getBrand
      deprecated: true
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: brand_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Brand information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Brand not found
  /api/prov/v1/brands:
    post:
      summary: Create a new brand
      description: Creates a new brand with the information provided
      operationId: createBrand
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        '201':
          description: Brand created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v1/brands/{brand_id}:
    put:
      summary: Update a brand
      description: Updates the information of an existing brand
      operationId: updateBrand
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: brand_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        '200':
          description: Brand updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Brand not found
  /api/prov/v1/brands/{brand_id}:
    delete:
      summary: Delete a brand
      description: Deletes an existing brand
      operationId: deleteBrand
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: brand_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Brand deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Brand not found
  /api/prov/v1/products:
    get:
      summary: Get a list of all products
      description: Returns a list of all products
      operationId: listProducts
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Products retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v1/products/{product_id}:
    get:
      summary: Get a product
      description: Returns the product with the specified ID
      operationId: getProduct
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not found
  /api/prov/v1/products:
    post:
      summary: Create a new product
      description: Creates a new product
      operationId: createProduct
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v1/products/{product_id}:
    put:
      summary: Update a product
      description: Updates a product with the specified ID
      operationId: updateProduct
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not found
  /api/prov/v1/products/{product_id}:
    delete:
      summary: Delete a product
      description: Deletes a product with the specified ID
      operationId: deleteProduct
      deprecated: true
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not found
  /api/prov/v2/customer-orders:
    get:
      summary: Retrieve all customer orders
      description: Retrieves a list of all customer orders
      operationId: retrieveCustomerOrders
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of customer orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerOrder'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/prov/v2/customer-orders/{order_id}:
    get:
      summary: Retrieve a customer order
      description: Retrieves a customer order with the specified ID
      operationId: retrieveCustomerOrder
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
        - in: path
          name: order_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrder'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer order not found
  /api/prov/v2/customer-orders:
    post:
      summary: Create a customer order
      description: Creates a new customer order
      operationId: createCustomerOrder
      parameters:
        - in: header
          name: X-API-Key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOrderInput'
      responses:
        '201':
          description: Customer order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrder'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer order not found
  
